[General]
network = TCPUDP

# udp client
**.clientUdp.numApps = 1 # the number of applications
**.clientUdp.app[*].typename = "UdpBasicApp" # inet.applications.udpapp.UdpBasicApp
**.clientUdp.app[*].destAddresses = "serverUdp"
**.clientUdp.app[*].destPort = 1000
**.clientUdp.app[*].messageLength = 100B
**.clientUdp.app[*].startTime = 1s
**.clientUdp.app[*].sendInterval = 1s

# udp server
**.serverUdp.numApps = 1
**.serverUdp.app[*].typename = "UdpEchoApp" # inet.applications.udpapp.UdpEchoApp
**.serverUdp.app[*].localPort = 1000

# tcp client
*.n = 5
**.client[*].numApps = 1
**.client[*].tcp.typename = "Tcp"
**.client[*].app[0].typename = "TcpBasicClientApp" # inet.applications.tcpapp.TcpBasicClientApp
**.client[*].app[0].localAddress = "" 
**.client[*].app[0].localPort = -1
**.client[*].app[0].connectAddress = "server"
**.client[*].app[0].connectPort = 80
**.client[*].app[0].startTime = 100s # time first session begins
**.client[*].app[0].requestLength = intWithUnit(truncnormal(3500000B,20B)) # length of a request
**.client[*].app[0].replyLength = intWithUnit(2000B) # length of a reply
**.client[*].app[0].numRequestsPerSession = 1 # number of requests sent per session
**.client[*].app[0].thinkTime = truncnormal(1s,2s) # time gap between reuqests
**.client[*].app[0].idleInterval = truncnormal(3s,6s) # time gap bewtween sessions
**.client[*].app[0].reconnectInterval = 30s # if connection breaks, waits this much before trying to reconnect

# tcp client congestion control algorithm
**.client[0].tcp.tcpAlgorithmClass = "TcpTahoe"
**.client[1].tcp.tcpAlgorithmClass = "TcpReno" # default algorithm
**.client[2].tcp.tcpAlgorithmClass = "TcpNewReno"
**.client[3].tcp.tcpAlgorithmClass = "TcpWestwood"
**.client[4].tcp.tcpAlgorithmClass = "TcpVegas"

# tcp server
**.server.numApps = 1
**.server.tcp.typename = "Tcp"
**.server.app[0].typename = "TcpSinkApp"  # inet.applications.tcpapp.TcpGenericServerApp
**.server.app[0].localAddress = ""
**.server.app[0].localPort = 80
#**.server.app[0].replyDelay = 0s

# NIC configuration (Network Initial Configuration)
**.ppp[*].queue.typename = "DropTailQueue" # in routers
**.ppp[*].ppp.queue.packetCapacity = 2  # in routers

[Config TestUdp]
*.n = 0
**.clientUdp.numApps = 1
**.client[*].numApps = 0
**.clientUdp.app[*].sendInterval = 1s

[Config TestTcp]
*.n = 1
**.clientUdp.numApps = 0
**.client[*].numApps = 1
**.client[*].app[0].numRequestsPerSession = 1
**.client[*].app[0].replyLength = intWithUnit(1000B)

[Config TestTahoe]
# Add configurations to simulate congestion environment
*.n = 1
**.clientUdp.numApps = 0
#**.client[*].numApps = 0
**.client[0].numApps = 1
**.client[0].tcp.tcpAlgorithmClass = "TcpTahoe"

[Config TestReno]
# Add configurations to simulate congestion environment
*.n = 1
**.clientUdp.numApps = 0
#**.client[*].numApps = 0
**.client[0].numApps = 1
**.client[0].tcp.tcpAlgorithmClass = "TcpReno"

[Config TestNewReno]
# Add configurations to simulate congestion environment
*.n = 1
**.clientUdp.numApps = 0
#**.client[*].numApps = 0
**.client[0].numApps = 1
**.client[0].tcp.tcpAlgorithmClass = "TcpNewReno"

[Config TestWestwood]
# Add configurations to simulate congestion environment
*.n = 1
**.clientUdp.numApps = 0
#**.client[*].numApps = 0
**.client[0].numApps = 1
**.client[0].tcp.tcpAlgorithmClass = "TcpWestwood"


[Config TestVegas]
# Add configurations to simulate congestion environment
*.n = 1
**.clientUdp.numApps = 0
#**.client[*].numApps = 0
**.client[0].numApps = 1
**.client[0].tcp.tcpAlgorithmClass = "TcpVegas"


